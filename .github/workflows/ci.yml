name: CI

on:
  push:
    branches:
      - master

jobs:
  build-test:
    name: Symfony 5.2 (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
#    services:
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ROOT_PASSWORD: root
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: [ '7.4' ]


    # —— Setup Github actions —————————————————————————————————————————————
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      ## —— Coding standards ————————————————————————————————————————————————
      # Can't handle PHP8 for now
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: vendor/bin/phpcs ./src
        if: matrix.php-versions == '7.4'

      ## —— Static analysis —————————————————————————————————————————————————
      - name: Static analysis of PHP code (PHPStan)
        run: vendor/bin/phpstan
        if: matrix.php-versions == '7.4'

      ## —— Tests ———————————————————————————————————————————————————————————
#      - name: Create database and schema
#        run: bin/console doctrine:database:create && bin/console doctrine:migration:migrate

#      - name: Load fixtures
#        run: bin/console doctrine:fixtures:load

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v2
        with:
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml.dist
          args: --coverage-text
